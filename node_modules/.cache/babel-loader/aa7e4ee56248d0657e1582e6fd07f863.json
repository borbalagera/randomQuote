{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\randomQuote\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null\n    };\n    this.selectedQuoteIndex = this.selectedQuoteIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }, this.assignNewQuoteIndex));\n  }\n\n  get selectedQuote() {\n    if (!this.state.quotes.length || !Number.isInteger(this.state.selectedQuoteIndex)) {\n      return;\n    }\n\n    return this.state.quotes[this.state.selectedQuoteIndex];\n  }\n\n  selectedQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    const rand = Math.floor(0 + Math.random() * (this.state.quotes.length - 1));\n    return rand;\n  }\n\n  assignNewQuoteIndex() {\n    this.setState({\n      selectedQuoteIndex: this.selectedQuoteIndex()\n    });\n  }\n\n  render() {\n    console.log(this.state.selectedQuoteIndex);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, this.selectedQuote ? `\"${this.selectedQuote.quote}\" - ${this.selectedQuote.author}` : \"\", /*#__PURE__*/React.createElement(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: this.nextQuoteClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Repos/randomQuote/src/App.js"],"names":["React","Component","Button","App","constructor","props","state","quotes","selectedQuoteIndex","bind","componentDidMount","fetch","then","data","json","setState","assignNewQuoteIndex","selectedQuote","length","Number","isInteger","rand","Math","floor","random","render","console","log","quote","author","nextQuoteClickHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAIA,SAAKA,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,uIADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISL,MAAD,IAAY,KAAKQ,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd,EAA0B,KAAKS,mBAA/B,CAJpB;AAKD;;AAED,MAAIC,aAAJ,GAAoB;AAClB,QACE,CAAC,KAAKX,KAAL,CAAWC,MAAX,CAAkBW,MAAnB,IACA,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKd,KAAL,CAAWE,kBAA5B,CAFH,EAGE;AACA;AACD;;AACD,WAAO,KAAKF,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWE,kBAA7B,CAAP;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AACnB,QAAI,CAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBW,MAAvB,EAA+B;AAC7B;AACD;;AACD,UAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAI,CAACE,MAAL,MAAiB,KAAKlB,KAAL,CAAWC,MAAX,CAAkBW,MAAlB,GAA2B,CAA5C,CAAf,CAAb;AACA,WAAOG,IAAP;AACD;;AAEDL,EAAAA,mBAAmB,GAAG;AACpB,SAAKD,QAAL,CAAc;AAAEP,MAAAA,kBAAkB,EAAE,KAAKA,kBAAL;AAAtB,KAAd;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWE,kBAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,aAAL,GACI,IAAG,KAAKA,aAAL,CAAmBW,KAAM,OAAM,KAAKX,aAAL,CAAmBY,MAAO,EADhE,GAEG,EAHN,eAIE,oBAAC,MAAD;AACE,MAAA,iBAAiB,EAAC,YADpB;AAEE,MAAA,YAAY,EAAE,KAAKC,qBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAWD;;AArDyB;;AAwD5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null,\n    };\n    this.selectedQuoteIndex = this.selectedQuoteIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((data) => data.json())\n      .then((quotes) => this.setState({ quotes }, this.assignNewQuoteIndex));\n  }\n\n  get selectedQuote() {\n    if (\n      !this.state.quotes.length ||\n      !Number.isInteger(this.state.selectedQuoteIndex)\n    ) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedQuoteIndex];\n  }\n\n  selectedQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    const rand = Math.floor(0 + Math.random() * (this.state.quotes.length - 1));\n    return rand;\n  }\n\n  assignNewQuoteIndex() {\n    this.setState({ selectedQuoteIndex: this.selectedQuoteIndex() });\n  }\n\n  render() {\n    console.log(this.state.selectedQuoteIndex);\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        {this.selectedQuote\n          ? `\"${this.selectedQuote.quote}\" - ${this.selectedQuote.author}`\n          : \"\"}\n        <Button\n          buttonDisplayName=\"Next Quote\"\n          clickHandler={this.nextQuoteClickHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
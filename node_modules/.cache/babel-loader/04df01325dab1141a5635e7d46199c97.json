{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\randomQuote\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      currentIndex: null\n    };\n    this.newIndex = this.newIndex.bind(this);\n    this.currentIndex = this.currentIndex.bind(this);\n  }\n  /* getting the quotes */\n\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }, this.newIndex));\n  }\n  /* returning the indexth quote */\n\n\n  get selectedQuote() {\n    if (!this.state.quotes.length || !Number.isInteger(this.state.currentIndex)) {\n      return undefined;\n    }\n\n    return this.state.quotes[this.state.currentIndex];\n  }\n  /* random index */\n\n\n  currentIndex() {\n    const rand = Math.floor(0 + Math.random() * (this.state.quotes.length - 1));\n    return rand;\n  }\n  /* setting the random index in the state */\n\n\n  newIndex() {\n    this.setState({\n      currentIndex: this.currentIndex()\n    });\n  }\n  /* rendering */\n\n\n  render() {\n    console.log(this.state.currentIndex);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App quote-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, this.selectedQuote ? `\"${this.selectedQuote.quote}\" - ${this.selectedQuote.author}` : \"\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: this.newIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Repos/randomQuote/src/App.js"],"names":["React","Component","Button","App","constructor","props","state","quotes","currentIndex","newIndex","bind","componentDidMount","fetch","then","data","json","setState","selectedQuote","length","Number","isInteger","undefined","rand","Math","floor","random","render","console","log","quote","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB;AACD;AAED;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,uIADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISN,MAAD,IAAY,KAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd,EAA0B,KAAKE,QAA/B,CAJpB;AAKD;AAED;;;AAEA,MAAIQ,aAAJ,GAAoB;AAClB,QACE,CAAC,KAAKX,KAAL,CAAWC,MAAX,CAAkBW,MAAnB,IACA,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKd,KAAL,CAAWE,YAA5B,CAFH,EAGE;AACA,aAAOa,SAAP;AACD;;AACD,WAAO,KAAKf,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWE,YAA7B,CAAP;AACD;AAED;;;AAEAA,EAAAA,YAAY,GAAG;AACb,UAAMc,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAI,CAACE,MAAL,MAAiB,KAAKnB,KAAL,CAAWC,MAAX,CAAkBW,MAAlB,GAA2B,CAA5C,CAAf,CAAb;AACA,WAAOI,IAAP;AACD;AAED;;;AAEAb,EAAAA,QAAQ,GAAG;AACT,SAAKO,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAE,KAAKA,YAAL;AAAhB,KAAd;AACD;AAED;;;AAEAkB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWE,YAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,aAAL,GACI,IAAG,KAAKA,aAAL,CAAmBY,KAAM,OAAM,KAAKZ,aAAL,CAAmBa,MAAO,EADhE,GAEG,EAHN,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAC,YAA1B;AAAuC,MAAA,YAAY,EAAE,KAAKrB,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA3DyB;;AA8D5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      currentIndex: null,\n    };\n    this.newIndex = this.newIndex.bind(this);\n    this.currentIndex = this.currentIndex.bind(this);\n  }\n\n  /* getting the quotes */\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((data) => data.json())\n      .then((quotes) => this.setState({ quotes }, this.newIndex));\n  }\n\n  /* returning the indexth quote */\n\n  get selectedQuote() {\n    if (\n      !this.state.quotes.length ||\n      !Number.isInteger(this.state.currentIndex)\n    ) {\n      return undefined;\n    }\n    return this.state.quotes[this.state.currentIndex];\n  }\n\n  /* random index */\n\n  currentIndex() {\n    const rand = Math.floor(0 + Math.random() * (this.state.quotes.length - 1));\n    return rand;\n  }\n\n  /* setting the random index in the state */\n\n  newIndex() {\n    this.setState({ currentIndex: this.currentIndex() });\n  }\n\n  /* rendering */\n\n  render() {\n    console.log(this.state.currentIndex);\n    return (\n      <div className=\"App quote-box\">\n        {this.selectedQuote\n          ? `\"${this.selectedQuote.quote}\" - ${this.selectedQuote.author}`\n          : \"\"}\n        <br />\n        <Button buttonDisplayName=\"Next Quote\" clickHandler={this.newIndex} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\randomQuote\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null\n    };\n    this.selectedQuoteIndex = this.selectedQuoteIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(data => data.json()).then(quotes => this.setState({\n      quotes\n    }, () => {\n      this.setState({\n        selectedQuoteIndex: this.selectedQuoteIndex()\n      });\n    }));\n  }\n\n  selectedQuoteIndex() {\n    if (this.state.quotes.length) {\n      return;\n    }\n\n    const min = 0;\n    const max = this.state.quotes.length() - 1;\n    const rand = min + Math.random() * (max - min);\n    return rand;\n  }\n\n  render() {\n    console.log(this.selectedQuoteIndex);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      buttonDisplayName: \"Next Quote\",\n      clickHandler: this.nextQuoteClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Repos/randomQuote/src/App.js"],"names":["React","Component","Button","App","constructor","props","state","quotes","selectedQuoteIndex","bind","componentDidMount","fetch","then","data","json","setState","length","min","max","rand","Math","random","render","console","log","nextQuoteClickHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAIA,SAAKA,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,uIADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISL,MAAD,IACJ,KAAKQ,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd,EAA0B,MAAM;AAC9B,WAAKQ,QAAL,CAAc;AAAEP,QAAAA,kBAAkB,EAAE,KAAKA,kBAAL;AAAtB,OAAd;AACD,KAFD,CALJ;AASD;;AAEDA,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKF,KAAL,CAAWC,MAAX,CAAkBS,MAAtB,EAA8B;AAC5B;AACD;;AACD,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,KAAKZ,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,KAA6B,CAAzC;AACA,UAAMG,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAnB;AACA,WAAOE,IAAP;AACD;;AACDG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,kBAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,iBAAiB,EAAC,YADpB;AAEE,MAAA,YAAY,EAAE,KAAKiB,qBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAzCyB;;AA4C5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Quotebox.js\";\nimport \"./App.css\";\nimport Button from \"./components/Button.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null,\n    };\n    this.selectedQuoteIndex = this.selectedQuoteIndex.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((data) => data.json())\n      .then((quotes) =>\n        this.setState({ quotes }, () => {\n          this.setState({ selectedQuoteIndex: this.selectedQuoteIndex() });\n        })\n      );\n  }\n\n  selectedQuoteIndex() {\n    if (this.state.quotes.length) {\n      return;\n    }\n    const min = 0;\n    const max = this.state.quotes.length() - 1;\n    const rand = min + Math.random() * (max - min);\n    return rand;\n  }\n  render() {\n    console.log(this.selectedQuoteIndex);\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        <Button\n          buttonDisplayName=\"Next Quote\"\n          clickHandler={this.nextQuoteClickHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}